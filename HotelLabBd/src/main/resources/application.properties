
##Spring data properties
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=HotelLabBd;encrypt=true;trustServerCertificate=true
spring.datasource.username=sa
spring.datasource.password=123456
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql = true
spring.session.jdbc.initialize-schema: always
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServerDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.proc.param_null_passing = true


#spring.application.name=HotelLabBd
#
#spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=HotelLabBd;encrypt=true;trustServerCertificate=true
#spring.datasource.username=sa
#spring.datasource.password=123456
#spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#
#spring.jpa.properties.hibernate.format_sql = true
#spring.session.jdbc.initialize-schema: always
### Hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServerDialect
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.properties.hibernate.proc.param_null_passing = true

#spring.thymeleaf.enabled=true
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.mode=HTML